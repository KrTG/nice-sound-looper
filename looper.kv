<Screen>:
    export_length: export_length
    trackLayout: trackLayout
    latency_adjustment: latency_adjustment
    noise_threshold: noise_threshold
    silence_threshold: silence_threshold
    silence_window: silence_window
    BoxLayout:
        orientation: 'vertical'
        Button:
            text: root.record_button_text
            background_color: root.record_button_color
            on_release: root.on_press_record()
        BoxLayout:
            id: trackLayout
            canvas.after:
                Color:
                    rgba: (1, 0, 0, 1)
                Line:
                    points: (root.tracks_x + int(root.progress_bar * root.tracks_width), self.pos[1], root.tracks_x + int(root.progress_bar * root.tracks_width), self.pos[1] + self.height)
            size_hint_y: 8
            orientation: 'vertical'
        BoxLayout:
            size_hint_y: 2
            orientation: 'horizontal'
            Button:
                size_hint_x: 3
                text: "Save Project"
                on_release: root.show_save()
            Button:
                size_hint_x: 3
                text: "Load Project"
                on_release: root.show_load()
            BoxLayout:
                orientation: "vertical"
                size_hint_x: 3
                Label:
                    text: "Minimum length"
                TextInput:
                    id: export_length
                    text: "30"
                Button:
                    text: "Export"
                    on_release: root.show_export()
            Button:
                size_hint_x: 3
                text: "Reset"
                on_release: root.reset()
            BoxLayout:
                orientation: 'vertical'
                size_hint_x:16
                BoxLayout:
                    size_hint_y: 4
                    orientation: 'horizontal'
                    BoxLayout:
                        size_hint_x:2
                        orientation: 'vertical'
                        Label:
                            text: "latency adjustment"
                        TextInput:
                            id: latency_adjustment
                            text: "0"
                    BoxLayout:
                        size_hint_x:2
                        orientation: 'vertical'
                        Label:
                            text: "STOP: max volume"
                        TextInput:
                            id: silence_threshold
                            text: "0"
                    BoxLayout:
                        size_hint_x:2
                        orientation: 'vertical'
                        Label:
                            text: "STOP: silence time(s)"
                        TextInput:
                            id: silence_window
                            text: "0"
                    BoxLayout:
                        size_hint_x:2
                        orientation: 'vertical'
                        Label:
                            text: "noise threshold"
                        TextInput:
                            id: noise_threshold
                            text: "1.0"
                        Button:
                            background_color: root.noise_sample_button_color
                            text: "Get noise sample"
                            on_release: root.get_noise_sample()
                Button:
                    size_hint_y: 1
                    text: "Save"
                    on_release: root.save_config()

<Track>:
    box: box
    volume: volume
    BoxLayout:
        orientation: 'horizontal'
        CustomLabel:
            size_hint_x: None
            width: 40
            text: str(root.number)
        VolumeSlider:
            id: volume
        Button:
            size_hint_x: None
            background_color: root.play_button_color
            text: root.play_button_text
            on_release: root.on_press_play()
        #CustomLabel:
        #    size_hint_x: None
        #    width: 20

        RelativeLayout:
            id: box
            size_hint_x:6
            Image:
                size_hint: (root.scale, 1)
                texture: root.texture
                keep_ratio: False
                allow_stretch: True
            BoxLayout:
        CustomLabel:
            width: 120
            size_hint_x: None
            text: root.info_text
            text_size: self.size
            halign: "left"
            valign: "top"
        Button:
            size_hint_x: None
            text: "Export track and watch for changes"
            text_size: self.width, None
            halign: "center"
            on_release: root.on_press_export()
        Button:
            size_hint_x: None
            text: "Reset"
            on_release: root.on_press_reset()

<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            path: "."
            filters: ["*" + ("" if extension_checkbox.active else root.extension)]

        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: 30
            Label:
                size_hint_x: 2
                halign: "left"
                valign: "middle"
                text_size: self.size
                text: "Show all files:"
            CheckBox:
                size_hint_x: None
                width: 20
                id: extension_checkbox
            Label:
                size_hint_x: 12

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()
            Button:
                text: "Load"
                on_release: root.load(filechooser.path, filechooser.selection)

<SaveDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            path: root.path
            filters: ["*" + ("" if extension_checkbox.active else root.extension)]
            on_selection: text_input.text = self.selection and self.selection[0] or ''

        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: 30
            Label:
                size_hint_x: 2
                halign: "left"
                valign: "middle"
                text_size: self.size
                text: "Show all files:"
            CheckBox:
                size_hint_x: None
                width: 20
                id: extension_checkbox
            Label:
                size_hint_x: 12

        BoxLayout:
            orientation: 'horizontal'
            size_hint_y: None
            height: 30
            Label:
                size_hint_x: 2
                halign: "left"
                valign: "middle"
                text_size: self.size
                text: "Save file: "
            TextInput:
                id: text_input
                text: root.filename
                size_hint_x: 10
                multiline: False
            Label:
                size_hint_x: 2
                text: root.extension

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()
            Button:
                text: "Save"
                on_release: root.save(filechooser.path, text_input.text)

<CustomLabel>:
    color: (0, 0, 0, 1)
    canvas.before:
        Color:
            rgba: (0.7, 0.7, 0.7, 1)
        Rectangle:
            # self here refers to the widget i.e FloatLayout
            pos: self.pos
            size: self.size

<VolumeSlider>:
    slider: slider
    orientation: 'vertical'
    size_hint_x: None
    width: 60
    canvas.before:
        Color:
            rgba: (0.7, 0.7, 0.7, 1)
        Rectangle:
            # self here refers to the widget i.e FloatLayout
            pos: self.pos
            size: self.size
    Slider:
        id: slider
        size_hint_y: 5
        min: 0
        max: 100
        value: 50
        step: 1
        value_track: True
        value_track_color: (0, 0.7, 0, 1)
        orientation: 'vertical'
    Button:
        size_hint_y: 1
        text: str(2 * int(slider.value)) + "%"
        on_release: slider.value = 50
